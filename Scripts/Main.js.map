{"version":3,"file":"Main.js","sourceRoot":"","sources":["../TypeScript/Models/Card.ts","../TypeScript/Models/Deck.ts","../TypeScript/Models/Hand.ts","../TypeScript/Models/Game.ts","../TypeScript/Controller/HtmlHand.ts","../TypeScript/Controller/HTMLElements.ts","../TypeScript/Test/TestButtons.ts","../TypeScript/Test/TestWins.ts","../TypeScript/Controller/Controller.ts","../TypeScript/Main.ts","../TypeScript/Controller/DealerFunctions.ts"],"names":[],"mappings":";;;;;;;;;;IAAA,wGAAwG;IACxG;;;;;;;;;;;;;;;;MAgBE;IACW,QAAA,cAAc,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IAChG,QAAA,SAAS,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAA;IAElE,MAAM,YAAY,GAAG,IAAI,GAAG,EAAkB;SACzC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC;SACb,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC;SACf,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC;SAChB,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC;SACf,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;IAElB,MAAa,IAAI;QAKb,YAAoB,IAAY,EAAS,IAAY;YAAjC,SAAI,GAAJ,IAAI,CAAQ;YAAS,SAAI,GAAJ,IAAI,CAAQ;YACjD,IAAI,CAAC,QAAQ,GAAG,UAAU,IAAI,CAAC,WAAW,EAAE,OAAO,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC;YAC5E,4BAA4B;QAChC,CAAC;QAED,QAAQ;YACJ,OAAO,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACtC,CAAC;QAGD,QAAQ;YACJ,OAAO,GAAG,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;QAC1C,CAAC;KACJ;IAlBD,oBAkBC;;ACtDD,oFAAoF;;;;IAIpF,MAAa,IAAI;QAIb,YAAa,aAAqB;YAC9B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAA;YAEf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;gBACpC,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,qBAAc,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE;oBACpE,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,gBAAS,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE;wBAC/D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,qBAAc,CAAC,SAAS,CAAC,EAAE,gBAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;qBAC7E;iBACJ;aACJ;QACL,CAAC;QAED,OAAO,CAAE,IAAY,EAAE,IAAY;YAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;QACzC,CAAC;QAED,OAAO;YACH,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAE5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;gBACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACxC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAA;iBAC7D;aAEJ;QACL,CAAC;QAEO,SAAS,CAAE,KAAa,EAAE,MAAc;YAC5C,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YAC5B,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;YACtC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAA;QAC7B,CAAC;QAEO,YAAY,CAAE,GAAW,EAAE,GAAW;YAC1C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAA;QAChD,CAAC;QAED,QAAQ;YACJ,IAAI,WAAW,GAAG,EAAE,CAAC;YACrB,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBACzB,WAAW,IAAI,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC;aACzC;YACD,OAAO,WAAW,CAAA;QACtB,CAAC;QAED,OAAO;YACH,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAA;QAClC,CAAC;QAED,SAAS;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAC9B,CAAC;KAEJ;IAzDD,oBAyDC;;;;;IC1DD,MAAa,IAAI;QAUb,YAAoB,GAAW,EAAS,KAAa;YAAjC,QAAG,GAAH,GAAG,CAAQ;YAAS,UAAK,GAAL,KAAK,CAAQ;YACjD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAA;YACf,IAAI,CAAC,KAAK,GAAG,EAAE,CAAA;YACf,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;YACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAA;YACtB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAA;QACtB,CAAC;QAED,eAAe,CAAE,IAAU;YACvB,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAA;YAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YAC1B,IAAI,CAAC,cAAc,EAAE,CAAA;YACrB,OAAO,SAAS,CAAA;QACpB,CAAC;QAED,eAAe,CAAE,SAAe;YAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YAC1B,IAAI,CAAC,cAAc,EAAE,CAAA;YACrB,OAAO,SAAS,CAAA;QACpB,CAAC;QAEO,cAAc;YAClB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAA;YACf,IAAI,SAAS,GAAG,CAAC,CAAA;YACjB,IAAI,IAAI,GAAG,CAAC,CAAA;YACZ,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBACzB,SAAS,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAA;gBAC5B,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,EAAE;oBACrB,IAAI,EAAE,CAAA;iBACT;aACJ;YAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YAC1B,OAAO,IAAI,EAAE,GAAG,CAAC,EAAE;gBACf,SAAS,IAAI,EAAE,CAAA;gBACf,IAAI,SAAS,IAAI,EAAE,EAAE;oBACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;iBAC7B;aAEJ;QACL,CAAC;QAED,YAAY;YACR,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAA;gBAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACxC,IAAI,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAA;iBACjC;gBACD,OAAO,IAAI,CAAA;aACd;;gBACI,OAAO,GAAG,CAAA;QACnB,CAAC;QAED,eAAe;YACX,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBAEvB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;gBAEvB,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;oBAC1B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;iBAC7B;gBACD,OAAO,GAAG,CAAA;aACb;YACD,OAAO,CAAC,CAAA;QACZ,CAAC;QAED,cAAc;YACV,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;gBAEvB,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;oBAC1B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;iBAC7B;gBACD,OAAO,GAAG,CAAC;aACd;YACD,OAAO,CAAC,CAAA;QACZ,CAAC;QAGD,cAAc;YACV,IAAI,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE,KAAK,EAAE,CAAA;YAC9C,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAA;YAE5C,OAAO,UAAU,IAAI,cAAc,CAAA;QACvC,CAAC;QAED,OAAO;YACH,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC1B,IAAI,KAAK,KAAK,EAAE,EAAE;oBACd,OAAO,IAAI,CAAA;iBACd;aACJ;YACD,OAAO,KAAK,CAAA;QAChB,CAAC;QAED,SAAS;YACL,OAAO,IAAI,CAAC,cAAc,EAAE,GAAG,EAAE,CAAA;QACrC,CAAC;QAGD,eAAe,CAAE,YAAoB;YACjC,IAAI,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE,CAAA;YAC5C,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAA;YAC3C,IAAI,yBAAyB,GAAG,YAAY,IAAI,IAAI,CAAC,GAAG,CAAA;YAExD,OAAO,UAAU,IAAI,cAAc,IAAI,yBAAyB,IAAI,IAAI,CAAC,SAAS,EAAE,CAAA;QACxF,CAAC;QAED,QAAQ;YACJ,OAAO,IAAI,CAAC,cAAc,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,EAAE,CAAA;QAC1D,CAAC;QAED,SAAS;YACL,OAAO,CAAC,IAAI,CAAC,MAAM,CAAA;QACvB,CAAC;QAED,cAAc,CAAE,WAAiB,EAAE,YAAoB;YACnD,IAAI,YAAY,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,KAAK,CAAA;YACtD,IAAI,iBAAiB,GAAG,IAAI,CAAC,SAAS,KAAK,CAAC,CAAA;YAC5C,IAAI,oBAAoB,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE,CAAA;YACtD,IAAI,wBAAwB,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;YAEhE,OAAO,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE,IAAI,iBAAiB,IAAI,oBAAoB,IAAI,wBAAwB,CAAA;QACpH,CAAC;QAED,UAAU,CAAE,QAAgB,EAAE,YAAoB;YAC9C,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;YACzE,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAA;YAC5C,IAAI,cAAc,GAAG,QAAQ,GAAG,CAAC,CAAA;YACjC,IAAI,oBAAoB,GAAG,YAAY,IAAI,IAAI,CAAC,GAAG,CAAA;YACnD,OAAO,aAAa,IAAI,cAAc,IAAI,cAAc,IAAI,oBAAoB,IAAI,IAAI,CAAC,SAAS,EAAE,CAAA;QACxG,CAAC;QAED,cAAc,CAAE,YAAoB;YAChC,IAAI,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAA;YAC7C,IAAI,gBAAgB,GAAG,IAAI,CAAC,SAAS,KAAK,CAAC,CAAA;YAC3C,IAAI,wBAAwB,GAAG,YAAY,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,CAAA;YAC3D,OAAO,eAAe,IAAI,IAAI,CAAC,SAAS,EAAE,IAAI,gBAAgB,IAAI,wBAAwB,CAAA;QAC9F,CAAC;QAED,aAAa;YACT,OAAO,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,SAAS,EAAE,CAAA;QAC/C,CAAC;QAED,YAAY,CAAE,UAAgB;YAC1B,IAAI,WAAW,GAAG,UAAU,CAAC,eAAe,EAAE,CAAA;YAC9C,IAAI,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAA;YAExC,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;gBACzB,IAAI,CAAC,WAAW,GAAG,aAAa,CAAA;gBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAA;aAC/B;iBAEI,IAAI,IAAI,CAAC,cAAc,EAAE,KAAK,IAAI,IAAI,UAAU,CAAC,cAAc,EAAE,KAAK,KAAK,EAAE;gBAC9E,IAAI,CAAC,WAAW,GAAG,6BAA6B,CAAA;gBAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAA;aAC9C;iBAEI,IAAI,UAAU,CAAC,cAAc,EAAE,KAAK,IAAI,EAAE;gBAC3C,IAAI,CAAC,WAAW,GAAG,6BAA6B,CAAA;gBAChD,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAA;aACpB;iBAEI,IAAI,WAAW,GAAG,EAAE,EAAE;gBACvB,IAAI,CAAC,WAAW,GAAG,aAAa,CAAA;gBAChC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAA;aACpB;iBAEI,IAAI,WAAW,GAAG,EAAE,EAAE;gBACvB,IAAI,CAAC,WAAW,GAAG,aAAa,CAAA;gBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAA;aAC/B;iBAEI,IAAI,WAAW,GAAG,WAAW,EAAE;gBAChC,IAAI,CAAC,WAAW,GAAG,aAAa,CAAA;gBAChC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAA;aACpB;iBAEI,IAAI,WAAW,KAAK,WAAW,EAAE;gBAClC,IAAI,CAAC,WAAW,GAAG,0BAA0B,CAAA;gBAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAA;aAC3B;iBACI,IAAI,WAAW,GAAG,WAAW,EAAE;gBAChC,IAAI,CAAC,WAAW,GAAG,aAAa,CAAA;gBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAA;aAC/B;QACL,CAAC;KAEJ;IAtMD,oBAsMC;;;;;ICrMD,MAAa,IAAI;QAQb,YAAoB,KAAa,EAAE,GAAW;YAA1B,UAAK,GAAL,KAAK,CAAQ;YAJjC,kBAAa,GAAG,CAAC,CAAA;YAKb,IAAI,CAAC,WAAW,GAAG,IAAI,WAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACjC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAA;YACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;YACtD,IAAI,CAAC,IAAI,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;YACxC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAA;QACvB,CAAC;QAED,QAAQ,CAAE,GAAW;YACjB,IAAI,CAAC,KAAK,IAAI,GAAG,CAAA;YACjB,OAAO,GAAG,CAAA;QACd,CAAC;QAED,GAAG,CAAE,IAAU,EAAE,IAAW;YAExB,IAAI,IAAI,IAAI,SAAS,EAAE;gBACnB,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;aACzC;;gBAEI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAA;YAE/B,OAAO,IAAI,CAAA;QACf,CAAC;QAGD,UAAU,CAAE,SAAiB;YACzB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,IAAI,CAAA;QAC7C,CAAC;QAGD,WAAW;YAEP,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;gBAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;gBACnC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAA;aAC9B;QACL,CAAC;QAED,mBAAmB;YAEf,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;gBAC/B,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE;oBACvB,OAAO,KAAK,CAAA;iBACf;aACJ;YAED,OAAO,IAAI,CAAA;QACf,CAAC;QAED,UAAU;YACN,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,IAAI,EAAE;gBACjG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;YAC9B,IAAI,CAAC,WAAW,EAAE,CAAA;QACtB,CAAC;QAED,eAAe,CAAE,SAAiB;YAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAA;YACtC,IAAI,OAAO,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;YAExE,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAA;YACzC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;YACd,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;YACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;QAClC,CAAC;QAED,UAAU,CAAE,SAAiB;YACzB,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAA;YACtC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;YACnC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;YACd,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAA;QAC9B,CAAC;QAED,SAAS,CAAE,SAAiB;YACxB,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAA;YACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;YACrB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAA;QAC9B,CAAC;QAED,UAAU,CAAE,SAAiB;YACzB,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAA;YACtC,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAA;YAC/B,IAAI,CAAC,SAAS,GAAG,YAAY,CAAA;YAC7B,IAAI,CAAC,KAAK,IAAI,YAAY,CAAA;QAC9B,CAAC;KAEJ;IA7FD,oBA6FC;;;;;;IC3FD,MAAa,QAAQ;QAkCjB,YAAoB,KAAa,EAAS,UAAsB,EAAS,MAAmB,EAAS,QAAiB;YAAlG,UAAK,GAAL,KAAK,CAAQ;YAAS,eAAU,GAAV,UAAU,CAAY;YAAS,WAAM,GAAN,MAAM,CAAa;YAAS,aAAQ,GAAR,QAAQ,CAAS;YAClH,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAA;YAE3B,IAAI,QAAQ;gBACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;;gBAExC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAA;YAErC,IAAI,CAAC,UAAU,EAAE,CAAA;YACjB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;YAEhC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAA;YAEpB,IAAI,QAAQ,EAAE;gBACV,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;gBACxC,IAAI,CAAC,aAAa,EAAE,CAAA;aACvB;;gBAEG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAA;QAGzC,CAAC;QAEO,UAAU;YACd,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;YAC5C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;YAC7C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;YAC7C,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;YAC9C,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;YAC3C,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;YACjD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;YAGhD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;YAC/C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YAGzC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;YACvC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;YACvC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;YACrC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;YAC3C,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;YAC1C,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YACxC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAA;YAGtD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,cAAc,CAAA;YAC3C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAA;YACrC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;gBAC7C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,eAAe,CAAA;gBAExC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;gBAC/C,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAA;gBAEnD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;gBACrC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;gBAEvC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;gBACnD,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;gBAEjD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;gBAClD,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;gBACxC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;gBAEpD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;gBAC/C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;gBACnC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;aAGpD;QACL,CAAC;QAGO,aAAa;YAEjB,wBAAwB;YACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAA;YACzC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAA;YAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAA;YAC7C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAA;YACrD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAA;YACxD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAA;YACrD,IAAI,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAA;YAChD,eAAe,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAA;YAE3C,6BAA6B;YAC7B,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YAC1C,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;YAC3C,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;YAC5C,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;YAChD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAA;YACjD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;YAChD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,eAAe,CAAC,CAAA;YAE3C,sBAAsB;YACtB,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;YAC/D,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAA;YACjE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAA;YACnE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAA;YAC3E,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAA;YAC7E,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAA;QAE/E,CAAC;QAGD,oBAAoB;YAChB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;gBACxD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAA;gBAC1D,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;gBAC/G,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;gBAC1G,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;gBACrF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;aACtF;QACL,CAAC;QAED,aAAa,CAAE,MAAwB,EAAE,IAAa;YAClD,IAAI,IAAI;gBACJ,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAA;;gBAG/B,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAA;QAGrC,CAAC;QAEO,WAAW;YACf,IAAI,IAAI,CAAC,QAAQ;gBACb,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,eAAe,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAA;;gBAEpE,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,iBAAiB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAA;YAE1E,iEAAiE;QACrE,CAAC;QAEM,UAAU;YACb,IAAI,CAAC,WAAW,EAAE,CAAA;YAClB,IAAI,SAAS,GAAG,EAAE,CAAA;YAClB,IAAI,IAAI,CAAC,QAAQ;gBACb,SAAS,GAAG,MAAM,CAAA;;gBAGlB,SAAS,GAAG,QAAQ,CAAA;YACxB,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE;gBAC5B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;gBACvB,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,GAAG,SAAS,mBAAmB,CAAA;aAC7D;iBAEI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;gBAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;gBACvB,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,GAAG,SAAS,YAAY,CAAA;aACtD;iBACI,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;gBAC5B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;gBACvB,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,GAAG,SAAS,iBAAiB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,CAAA;gBACnF,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAA;aACzD;YAED,IAAI,CAAC,oBAAoB,EAAE,CAAA;YAE3B,IAAI,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAClD,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAA;aAC/B;QAEL,CAAC;QAGD,GAAG,CAAE,IAAW;YAEZ,IAAI,IAAI,IAAI,SAAS,EAAE;gBACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;aAC9D;iBACI;gBACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;aACpE;YACD,IAAI,CAAC,UAAU,EAAE,CAAA;QACrB,CAAC;QAGD,UAAU,CAAE,IAAW;YACnB,IAAI,IAAI,IAAI,SAAS,EAAE;gBACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;aAC9D;iBACI;gBACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;aACpE;QACL,CAAC;QAED,IAAI;YACA,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;YACvB,IAAI,CAAC,UAAU,EAAE,CAAA;QACrB,CAAC;QAED,KAAK;YACD,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YACrC,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAA;YACjD,IAAI,WAAW,GAAG,IAAI,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;YAE/E,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;YACxC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAA;YACtD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;YAE7C,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE;gBAC1C,IAAI,CAAC,UAAU,EAAE,CAAA;aACpB;YACD,IAAI,CAAC,UAAU,CAAC,kBAAkB,EAAE,CAAA;QACxC,CAAC;QAED,SAAS;YACL,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YAEhC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,cAAc,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAA;YAClE,IAAI,CAAC,UAAU,CAAC,kBAAkB,EAAE,CAAA;YACpC,IAAI,CAAC,UAAU,EAAE,CAAA;QACrB,CAAC;QAED,UAAU;YACN,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YAChC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAA;YACnD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;YACxC,IAAI,CAAC,UAAU,EAAE,CAAA;QACrB,CAAC;QAED,SAAS;YACL,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YAC/B,IAAI,CAAC,UAAU,EAAE,CAAA;QACrB,CAAC;QAED,KAAK;YACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;QACxC,CAAC;KAGJ;IA5QD,4BA4QC;;;;;IC/QU,QAAA,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAA;IAC1C,QAAA,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAA;IAC5C,QAAA,YAAY,GAAqB,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAA;IAExE,QAAA,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAA;IACpD,QAAA,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAA;IAEpD,QAAA,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAA;IAClD,QAAA,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAA;IAE5C,QAAA,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAA;IAChD,QAAA,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAA;IACpD,QAAA,eAAe,GAAqB,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAA;IAEzF,SAAgB,aAAa,CAAE,GAAgB,EAAE,IAAU;QACvD,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;QAC5C,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA;QAC3C,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAA;QACtC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;QACrC,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAA;QACrD,QAAQ,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAA;QACnC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;IAC7B,CAAC;IARD,sCAQC;IAED,SAAgB,cAAc,CAAE,GAAgB,EAAE,IAAc;QAC5D,iBAAiB,CAAC,GAAG,CAAC,CAAA;QACtB,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YAC9B,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;SAC3B;IACL,CAAC;IALD,wCAKC;IAED,SAAgB,YAAY,CAAE,IAAY;QACtC,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAA;QAC5C,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACrC,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;QACrC,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;QACrC,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;QAClC,OAAO,MAAM,CAAA;IACjB,CAAC;IAPD,oCAOC;IAED,SAAgB,iBAAiB,CAAE,GAAgB;QAC/C,OAAO,GAAG,CAAC,aAAa,EAAE;YACtB,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;IACvC,CAAC;IAHD,8CAGC;;;;;IC5CD;;;;;;;;;OASG;IAEH,SAAgB,aAAa;QAEzB,6CAA6C;QAC7C,gDAAgD;QAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAA;QACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,CAAA;QACzC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;QACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,CAAA;IAE7C,CAAC;IAlBD,sCAkBC;IAED,SAAgB,cAAc;QAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAA;QACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAA;QACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAA;IACzC,CAAC;IAJD,wCAIC;IAED,SAAgB,WAAW;QACvB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QAExC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;QACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;IAC3C,CAAC;IAND,kCAMC;IAED,SAAgB,aAAa;QACzB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAA;QACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,CAAA;QACzC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;QACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;IAC3C,CAAC;IAZD,sCAYC;IAED,SAAgB,MAAM;QAClB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAA;QACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;QACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;QACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;IAC3C,CAAC;IAPD,wBAOC;;;;;ICjED;;;;;;;;;OASG;IAGH,SAAgB,qBAAqB;QACjC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA;QAC1C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA;QAExC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,CAAA;QAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA;QAC1C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,CAAA;QACzC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,CAAA;QAEzC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;IAC3C,CAAC;IAVD,sDAUC;IAED,SAAgB,0BAA0B;QACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA;QAC1C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA;QAExC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA;QAC1C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,CAAA;QACzC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,CAAA;QAEzC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;IAC3C,CAAC;IAZD,gEAYC;IAED,SAAgB,gBAAgB;QAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;IAC3C,CAAC;IAXD,4CAWC;IAED,SAAgB,iBAAiB;QAC7B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;IAE3C,CAAC;IAZD,8CAYC;IAED,SAAgB,sBAAsB;QAElC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,CAAA;QAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA;QAC1C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;IAC3C,CAAC;IARD,wDAQC;IAED,SAAgB,qBAAqB;QACjC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA;QAE1C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA;QAExC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,CAAA;IAC7C,CAAC;IARD,sDAQC;IAED,SAAgB,oBAAoB;QAChC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA;QAE1C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA;QACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,CAAA;QAEzC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,CAAA;IAC7C,CAAC;IAPD,oDAOC;IAED,SAAgB,gBAAgB;QAE5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;IAC3C,CAAC;IAXD,4CAWC;IAED,SAAgB,iBAAiB;QAC7B,8DAA8D;QAC9D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA,CAAC,SAAS;QACjD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA,CAAC,SAAS;QACjD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA,CAAC,GAAG;QAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA,CAAC,GAAG;QAE3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA,CAAE,GAAG;QAC/C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,CAAA,CAAC,MAAM;QAClD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,CAAA,CAAC,GAAG;QAC/C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA,CAAE,MAAM;QAClD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA,CAAI,OAAO;QACnD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA,CAAI,IAAI;QAEhD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;IAC3C,CAAC;IAlBD,8CAkBC;IAED,SAAgB,sBAAsB;QAElC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,CAAA;QAE3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;IAC3C,CAAC;IATD,wDASC;IAGD,SAAgB,IAAI;QAEhB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;IAC3C,CAAC;IAVD,oBAUC;IAED,SAAgB,MAAM;QAClB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA;IAC5C,CAAC;IAVD,wBAUC;IAED,SAAgB,aAAa;QACzB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA;IAC5C,CAAC;IAVD,sCAUC;IAED,SAAgB,cAAc;QAE1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA;QAExC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAA;QACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAA;QACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA;QAExC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;IAC3C,CAAC;IATD,wCASC;;;;;;;ICnLD,MAAa,UAAU;QASnB;YAPA,UAAK,GAAG,KAAK,CAAA;YAGb,iBAAY,GAAG,IAAI,CAAA;YACnB,eAAU,GAAG,EAAE,CAAA;YAIX,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAA;YAC9E,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAA;YACnF,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAA;QAC7D,CAAC;QAGD,YAAY;YACR,IAAI,CAAC,IAAI,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;YACtF,IAAI,CAAC,iBAAiB,EAAE,CAAA;YACxB,IAAI,CAAC,kBAAkB,EAAE,CAAA;YAEzB,IAAI,IAAI,CAAC,KAAK,EAAE;gBACZ,oDAAoD;gBACpD,iBAAiB;aACpB;YAED,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAA;YAC3C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;YACtB,IAAI,CAAC,WAAW,EAAE,CAAA;QACtB,CAAC;QAED,WAAW;YACP,IAAI,IAAI,CAAC,KAAK,EAAE;gBACZ,uCAAuC;gBACvC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,iBAAiB,CAAA;gBACtC,IAAI,CAAC,IAAI,EAAE,CAAA;aACd;YAED,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAA;YACrB,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAA;YAChC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;QAE7B,CAAC;QAGD,iBAAiB;YACb,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YACtC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YACtC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;YAGtB,IAAI,CAAC,UAAU,GAAG,IAAI,mBAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAA;YAC9D,IAAI,CAAC,WAAW,GAAG,EAAE,CAAA;YACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,mBAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAA;QAEtE,CAAC;QAED,kBAAkB;YACd,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAA;QAC3D,CAAC;QAED,UAAU,CAAE,OAAgB;YACxB,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAA;gBACrC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAA;aAC7C;iBACI;gBACD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAA;gBACnC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAA;aAC3C;QACL,CAAC;QAED,oBAAoB;YAChB,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAA;YACjC,IAAI,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;YAEtC,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;gBACtB,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,KAAK,CAAA;aACxC;;gBAEG,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,IAAI,CAAA;QAC5C,CAAC;QAED,aAAa;YACT,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAA;YAE9C,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,KAAK,CAAA;YACvC,IAAI,QAAQ,GAAG,MAAM,IAAI,IAAI,CAAC,UAAU,CAAA;YACxC,IAAI,QAAQ,GAAG,MAAM,IAAI,IAAI,CAAC,YAAY,CAAA;YAC1C,OAAO,SAAS,IAAI,QAAQ,IAAI,QAAQ,CAAA;QAE5C,CAAC;QAED,UAAU;YACN,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAA;YACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAA;YAC9D,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAA;YAC5B,IAAI,CAAC,OAAO,EAAE,CAAA;QAClB,CAAC;QAED,OAAO;YACH,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;gBAC/B,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAA;gBAGjD,IAAI,YAAY,GAAG,EAAE,CAAA;gBACrB,IAAI,QAAQ,GAAG,CAAC;oBACZ,YAAY,GAAG,eAAe,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAA;qBACjD,IAAI,QAAQ,GAAG,CAAC,EAAE;oBACnB,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE;wBAClE,YAAY,GAAG,aAAa,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4CAA4C,CAAA;wBAC/F,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAA;qBAC7C;;wBAEG,YAAY,GAAG,aAAa,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAA;iBACvD;qBAEI;oBACD,YAAY,GAAG,eAAe,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAA;iBACrD;gBAED,aAAa,IAAI,QAAQ,CAAA;gBACzB,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAA;gBACnD,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,YAAY,CAAA;aAC/C;YACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAA;YACnC,IAAI,CAAC,kBAAkB,EAAE,CAAA;YACzB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAA;YAC7C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;YACrB,IAAI,CAAC,oBAAoB,EAAE,CAAA;YAC3B,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,EAAE;gBACrC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAA;gBAC3C,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;gBACzC,IAAI,CAAC,SAAS,GAAG,iDAAiD,CAAA;gBAClE,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,0BAA0B,CAAA;gBACvD,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAA;gBAChC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;aACjC;QACL,CAAC;QAED,QAAQ;YACJ,IAAI,IAAI,GAAG,IAAI,WAAI,CAAC,CAAC,CAAC,CAAA;YAEtB,OAAO,IAAI,CAAC,OAAO,EAAE,KAAK,KAAK,EAAE;gBAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAA;aACrD;QAEL,CAAC;KAGJ;IAvJD,gCAuJC;;;;;IC5JD,IAAI,UAAU,GAAG,IAAI,uBAAU,EAAE,CAAA;;;;;;ACAjC;;;;;;;;;;;;;;EAcE;AAEF;;;;;;;;;;;;;;;;;;;;;;;GAuBG","sourcesContent":["// export enum cardSuit { Clubs = 'Clubs', Diamonds = 'Diamonds', Hearts = 'Hearts', Spades = 'Spades' }\r\n/*\r\nexport enum cardType {\r\n  Two = '2',\r\n  Three = '3',\r\n  Four = '4',\r\n  Five = '5',\r\n  Six = '6',\r\n  Seven = '7',\r\n  Eight = '8',\r\n  Nine = '9',\r\n  Ten = '10',\r\n  Jack = 'Jack',\r\n  Queen = 'Queen',\r\n  King = 'King',\r\n  Ace = 'Ace'\r\n}\r\n*/\r\nexport const cardTypesArray = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"Jack\", \"Queen\", \"King\", \"Ace\"];\r\nexport const cardSuits = [\"Clubs\", \"Diamonds\", \"Hearts\", \"Spades\"]\r\n\r\nconst cardTypesMap = new Map<string, number>()\r\n    .set(\"2\", 2)\r\n    .set(\"3\", 3)\r\n    .set(\"4\", 4)\r\n    .set(\"5\", 5)\r\n    .set(\"6\", 6)\r\n    .set(\"7\", 7)\r\n    .set(\"8\", 8)\r\n    .set(\"9\", 9)\r\n    .set(\"10\", 10)\r\n    .set(\"Jack\", 10)\r\n    .set(\"Queen\", 10)\r\n    .set(\"King\", 10)\r\n    .set(\"Ace\", 1)\r\n\r\nexport class Card {\r\n\r\n\r\n    imageSrc: string;\r\n\r\n    constructor (public type: string, public suit: string) {\r\n        this.imageSrc = `Images/${type.toLowerCase()}_of_${suit.toLowerCase()}.png`;\r\n        //console.log(this.imageSrc)\r\n    }\r\n\r\n    getScore (): number {\r\n        return cardTypesMap.get(this.type)\r\n    }\r\n\r\n\r\n    toString (): string {\r\n        return `${this.type} of ${this.suit}`;\r\n    }\r\n}\r\n","// Deck: Card[], shuffle(), createDeck(), swapIndex(), displayDeck(), UpdateScores()\r\n\r\nimport {cardTypesArray, Card, cardSuits} from \"./Card\"\r\n\r\nexport class Deck {\r\n    cards: Card[];\r\n\r\n\r\n    constructor (numberOfDecks: number) {\r\n        this.cards = []\r\n\r\n        for (let i = 0; i < numberOfDecks; i++) {\r\n            for (let typeIndex = 0; typeIndex < cardTypesArray.length; typeIndex++) {\r\n                for (let suitIndex = 0; suitIndex < cardSuits.length; suitIndex++) {\r\n                    this.cards.push(new Card(cardTypesArray[typeIndex], cardSuits[suitIndex]))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    addCard (type: string, suit: string) {\r\n        this.cards.push(new Card(type, suit))\r\n    }\r\n\r\n    shuffle (): void {\r\n        let timesToShuffle = this.getRandomInt(1, 5)\r\n\r\n        for (let j = 0; j < timesToShuffle; j++) {\r\n            for (let i = 0; i < this.cards.length; i++) {\r\n                this.swapIndex(i, this.getRandomInt(0, this.cards.length))\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private swapIndex (index: number, index2: number): void {\r\n        let temp = this.cards[index]\r\n        this.cards[index] = this.cards[index2]\r\n        this.cards[index2] = temp\r\n    }\r\n\r\n    private getRandomInt (min: number, max: number): number {\r\n        return Math.floor(Math.random() * max) + min\r\n    }\r\n\r\n    toString (): string {\r\n        let returnValue = \"\";\r\n        for (let card of this.cards) {\r\n            returnValue += card.toString() + \"\\n\";\r\n        }\r\n        return returnValue\r\n    }\r\n\r\n    isEmpty (): boolean {\r\n        return this.cards.length === 0\r\n    }\r\n\r\n    printDeck () {\r\n        console.log(this.toString)\r\n    }\r\n\r\n}\r\n","import {Deck} from \"./Deck\"\r\nimport {Card} from \"./Card\"\r\n\r\nexport class Hand {\r\n    cards: Card[]\r\n    score: number[]\r\n    stayed: boolean\r\n    winningText: string\r\n    surrender: boolean\r\n    insurance: number\r\n    winnings: number\r\n\r\n\r\n    constructor (public bet: number, public index: number) {\r\n        this.cards = []\r\n        this.score = []\r\n        this.stayed = false\r\n        this.surrender = false\r\n        this.insurance = 0\r\n    }\r\n\r\n    addCardFromDeck (deck: Deck): Card {\r\n        let cardToAdd = deck.cards.pop()\r\n        this.cards.push(cardToAdd)\r\n        this.calculateScore()\r\n        return cardToAdd\r\n    }\r\n\r\n    addCardFromCard (cardToAdd: Card): Card {\r\n        this.cards.push(cardToAdd)\r\n        this.calculateScore()\r\n        return cardToAdd\r\n    }\r\n\r\n    private calculateScore () {\r\n        this.score = []\r\n        let baseScore = 0\r\n        let aces = 0\r\n        for (let card of this.cards) {\r\n            baseScore += card.getScore()\r\n            if (card.type === \"Ace\") {\r\n                aces++\r\n            }\r\n        }\r\n\r\n        this.score.push(baseScore)\r\n        while (aces-- > 0) {\r\n            baseScore += 10\r\n            if (baseScore <= 21) {\r\n                this.score.push(baseScore)\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    getScoreText () {\r\n        if (this.score.length > 0) {\r\n            let text = `${this.score[0]}`\r\n            for (let i = 1; i < this.score.length; i++) {\r\n                text += ` or ${this.score[i]}`\r\n            }\r\n            return text\r\n        }\r\n        else return \"0\"\r\n    }\r\n\r\n    getHighestScore (): number {\r\n        if (this.score.length > 0) {\r\n\r\n            let max = this.score[0]\r\n\r\n            for (let score of this.score) {\r\n                max = Math.max(max, score)\r\n            }\r\n            return max\r\n        }\r\n        return 0\r\n    }\r\n\r\n    getLowestScore (): number {\r\n        if (this.score.length > 0) {\r\n            let min = this.score[0]\r\n\r\n            for (let score of this.score) {\r\n                min = Math.min(min, score)\r\n            }\r\n            return min;\r\n        }\r\n        return 0\r\n    }\r\n\r\n\r\n    checkBlackjack (): boolean {\r\n        let scoreCheck = this.getHighestScore() === 21\r\n        let cardCountCheck = this.cards.length === 2\r\n\r\n        return scoreCheck && cardCountCheck\r\n    }\r\n\r\n    check21 (): boolean {\r\n        for (let score of this.score) {\r\n            if (score === 21) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    checkBust (): boolean {\r\n        return this.getLowestScore() > 21\r\n    }\r\n\r\n\r\n    checkDoubleDown (currentScore: number): boolean {\r\n        let scoreCheck = this.getHighestScore() < 11\r\n        let cardCountCheck = this.cards.length <= 2\r\n        let playerCanPayForDoubleDown = currentScore >= this.bet\r\n\r\n        return scoreCheck && cardCountCheck && playerCanPayForDoubleDown && this.checkStay()\r\n    }\r\n\r\n    checkHit () {\r\n        return this.getLowestScore() <= 21 && this.checkStay()\r\n    }\r\n\r\n    checkStay () {\r\n        return !this.stayed\r\n    }\r\n\r\n    checkInsurance (dealerCards: Hand, currentScore: number): boolean {\r\n        let dealerHasAce = dealerCards.cards[0].type === \"Ace\"\r\n        let notAlreadyInsured = this.insurance === 0\r\n        let playerHasNoBlackjack = this.getHighestScore() < 21\r\n        let playerCanPayForInsurance = (currentScore - this.bet / 2) > 0\r\n\r\n        return dealerHasAce && this.checkStay() && notAlreadyInsured && playerHasNoBlackjack && playerCanPayForInsurance\r\n    }\r\n\r\n    checkSplit (handsNum: number, currentScore: number): boolean {\r\n        let cardTypeCheck = this.cards[0].getScore() === this.cards[1].getScore()\r\n        let cardCountCheck = this.cards.length === 2\r\n        let handCountCheck = handsNum < 4\r\n        let playerCanPayForSplit = currentScore >= this.bet\r\n        return cardTypeCheck && cardCountCheck && handCountCheck && playerCanPayForSplit && this.checkStay()\r\n    }\r\n\r\n    checkSurrender (currentScore: number): boolean {\r\n        let cardLengthCheck = this.cards.length === 2\r\n        let noInsuranceCheck = this.insurance === 0\r\n        let playerCanPayForSurrender = currentScore >= this.bet / 2\r\n        return cardLengthCheck && this.checkStay() && noInsuranceCheck && playerCanPayForSurrender\r\n    }\r\n\r\n    checkTurnOver (): boolean {\r\n        return this.checkBust() || this.checkStay()\r\n    }\r\n\r\n    decideWinner (dealerHand: Hand) {\r\n        let dealerScore = dealerHand.getHighestScore()\r\n        let playerScore = this.getHighestScore()\r\n\r\n        if (this.surrender === true) {\r\n            this.winningText = \"Surrendered\"\r\n            this.winnings = this.bet / 2\r\n        }\r\n\r\n        else if (this.checkBlackjack() === true && dealerHand.checkBlackjack() === false) {\r\n            this.winningText = \"Player Wins by Blackjack :D\"\r\n            this.winnings = this.bet * 3 / 2 + this.bet\r\n        }\r\n\r\n        else if (dealerHand.checkBlackjack() === true) {\r\n            this.winningText = \"Dealer Wins by Blackjack :(\"\r\n            this.winnings = 0\r\n        }\r\n\r\n        else if (playerScore > 21) {\r\n            this.winningText = \"Dealer Wins\"\r\n            this.winnings = 0\r\n        }\r\n\r\n        else if (dealerScore > 21) {\r\n            this.winningText = \"Player Wins\"\r\n            this.winnings = this.bet * 2\r\n        }\r\n\r\n        else if (dealerScore > playerScore) {\r\n            this.winningText = \"Dealer Wins\"\r\n            this.winnings = 0\r\n        }\r\n\r\n        else if (dealerScore === playerScore) {\r\n            this.winningText = \"We'll call it a draw @_@\"\r\n            this.winnings = this.bet\r\n        }\r\n        else if (dealerScore < playerScore) {\r\n            this.winningText = \"Player Wins\"\r\n            this.winnings = this.bet * 2\r\n        }\r\n    }\r\n\r\n}\r\n","import {Hand} from \"./Hand\"\nimport {Deck} from \"./Deck\"\nimport {Card} from \"./Card\"\n\nexport class Game {\n    dealerCards: Hand\n    playerCards: Hand[]\n    deck: Deck\n    numberOfDecks = 3\n    highScore: number\n\n\n    constructor (public score: number, bet: number) {\n        this.dealerCards = new Hand(0, 0)\n        this.playerCards = []\n        this.playerCards.push(new Hand(this.applyBet(bet), 0))\n        this.deck = new Deck(this.numberOfDecks)\n        this.deck.shuffle()\n    }\n\n    applyBet (bet: number) {\n        this.score -= bet\n        return bet\n    }\n\n    hit (hand: Hand, card?: Card): Card {\n\n        if (card == undefined) {\n            card = hand.addCardFromDeck(this.deck)\n        }\n\n        else hand.addCardFromCard(card)\n\n        return card\n    }\n\n\n    playerStay (handIndex: number) {\n        this.playerCards[handIndex].stayed = true\n    }\n\n\n    checkWinner () {\n\n        for (let hand of this.playerCards) {\n            hand.decideWinner(this.dealerCards)\n            this.score += hand.winnings\n        }\n    }\n\n    checkEndoPlayerTurn (): boolean {\n\n        for (let hand of this.playerCards) {\n            if (hand.stayed === false) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n    dealerTurn () {\n        while (Math.floor(this.dealerCards.getLowestScore()) < 17 && this.dealerCards.getHighestScore() != 21)\n            this.hit(this.dealerCards)\n        this.checkWinner()\n    }\n\n    splitPlayerHand (handIndex: number) {\n        let hand = this.playerCards[handIndex]\n        let newHand = new Hand(this.applyBet(hand.bet), this.playerCards.length)\n\n        newHand.addCardFromCard(hand.cards.pop())\n        this.hit(hand)\n        this.hit(newHand)\n        this.playerCards.push(newHand)\n    }\n\n    doubleDown (handIndex: number) {\n        let hand = this.playerCards[handIndex]\n        hand.bet += this.applyBet(hand.bet)\n        this.hit(hand)\n        this.playerStay(handIndex)\n    }\n\n    surrender (handIndex: number) {\n        let hand = this.playerCards[handIndex]\n        hand.surrender = true\n        this.playerStay(handIndex)\n    }\n\n    insureHand (handIndex: number) {\n        let hand = this.playerCards[handIndex]\n        let insureAmount = hand.bet / 2\n        hand.insurance = insureAmount\n        this.score -= insureAmount\n    }\n\n}\n","import {Game}       from \"../Models/Game\"\nimport {Hand}       from \"../Models/Hand\"\nimport {Controller} from \"./Controller\"\nimport * as html    from \"./HTMLElements\"\nimport {Card}       from \"TypeScript/Models/Card\"\n\nexport class HtmlHand {\n    mainDiv: HTMLElement\n    imageDiv: HTMLElement\n    scoreDiv: HTMLElement\n    buttonDiv: HTMLElement\n    betDiv: HTMLElement\n    insuranceDiv: HTMLElement\n    winningsDiv: HTMLElement\n\n    winnerText: string\n\n    hitButton: HTMLInputElement\n    stayButton: HTMLInputElement\n    splitButton: HTMLInputElement\n    insuranceButton: HTMLInputElement\n    doubleDownButton: HTMLInputElement\n    surrenderButton: HTMLInputElement\n\n\n    betSpan: HTMLElement\n    betAmount: HTMLElement\n    insuranceSpan: HTMLElement\n    winningsSpan: HTMLElement\n\n    scoreSpan: HTMLElement\n\n    winningsText: HTMLElement\n    winningsAmount: HTMLElement\n\n\n    game: Game\n    hand: Hand\n\n\n    constructor (public index: number, public controller: Controller, public parent: HTMLElement, public isPlayer: boolean) {\n        this.game = controller.game\n\n        if (isPlayer)\n            this.hand = this.game.playerCards[index]\n        else\n            this.hand = this.game.dealerCards\n\n        this.manageDivs()\n        parent.appendChild(this.mainDiv)\n\n        this.winnerText = \"\"\n\n        if (isPlayer) {\n            this.hand = this.game.playerCards[index]\n            this.createButtons()\n        }\n        else\n            this.hand = this.game.dealerCards\n\n\n    }\n\n    private manageDivs () {\n        this.mainDiv = document.createElement(\"div\")\n        this.imageDiv = document.createElement(\"div\")\n        this.scoreDiv = document.createElement(\"div\")\n        this.buttonDiv = document.createElement(\"div\")\n        this.betDiv = document.createElement(\"div\")\n        this.insuranceDiv = document.createElement(\"div\")\n        this.winningsDiv = document.createElement(\"div\")\n\n\n        this.scoreSpan = document.createElement(\"span\")\n        this.scoreDiv.appendChild(this.scoreSpan)\n\n\n        this.mainDiv.appendChild(this.imageDiv)\n        this.mainDiv.appendChild(this.scoreDiv)\n        this.mainDiv.appendChild(this.betDiv)\n        this.mainDiv.appendChild(this.insuranceDiv)\n        this.mainDiv.appendChild(this.winningsDiv)\n        this.mainDiv.appendChild(this.buttonDiv)\n        this.mainDiv.appendChild(document.createElement(\"br\"))\n\n\n        this.mainDiv.style.display = \"inline-block\"\n        this.mainDiv.style.marginLeft = \"10%\"\n        if (this.isPlayer) {\n            this.betSpan = document.createElement(\"span\")\n            this.betSpan.innerText = \"Current Bet: \"\n\n            this.betAmount = document.createElement(\"span\")\n            this.betAmount.innerText = this.hand.bet.toString()\n\n            this.betDiv.appendChild(this.betSpan)\n            this.betDiv.appendChild(this.betAmount)\n\n            this.insuranceSpan = document.createElement(\"span\")\n            this.insuranceDiv.appendChild(this.insuranceSpan)\n\n            this.winningsSpan = document.createElement(\"span\")\n            let space = document.createElement(\"br\")\n            this.winningsAmount = document.createElement(\"span\")\n\n            this.winningsDiv.appendChild(this.winningsSpan)\n            this.winningsDiv.appendChild(space)\n            this.winningsDiv.appendChild(this.winningsAmount)\n\n\n        }\n    }\n\n\n    private createButtons () {\n\n        // create button objects\n        this.hitButton = html.createButton(\"Hit\")\n        this.stayButton = html.createButton(\"Stay\")\n        this.splitButton = html.createButton(\"Split\")\n        this.insuranceButton = html.createButton(\"Insurance\")\n        this.doubleDownButton = html.createButton(\"Double Down\")\n        this.surrenderButton = html.createButton(\"Surrender\")\n        let invisibleButton = html.createButton(\"invis\")\n        invisibleButton.style.visibility = \"hidden\"\n\n        //append buttons to buttonDiv\n        this.buttonDiv.appendChild(this.hitButton)\n        this.buttonDiv.appendChild(this.stayButton)\n        this.buttonDiv.appendChild(this.splitButton)\n        this.buttonDiv.appendChild(this.insuranceButton)\n        this.buttonDiv.appendChild(this.doubleDownButton)\n        this.buttonDiv.appendChild(this.surrenderButton)\n        this.buttonDiv.appendChild(invisibleButton)\n\n        //add button listeners\n        this.hitButton.addEventListener(\"click\", (event) => this.hit())\n        this.stayButton.addEventListener(\"click\", (event) => this.stay())\n        this.splitButton.addEventListener(\"click\", (event) => this.split())\n        this.insuranceButton.addEventListener(\"click\", (event) => this.insurance())\n        this.doubleDownButton.addEventListener(\"click\", (event) => this.doubleDown())\n        this.surrenderButton.addEventListener(\"click\", (event) => this.surrender())\n\n    }\n\n\n    showAvailableButtons () {\n        if (this.isPlayer) {\n            this.buttonDisplay(this.hitButton, this.hand.checkHit())\n            this.buttonDisplay(this.stayButton, this.hand.checkStay())\n            this.buttonDisplay(this.splitButton, this.hand.checkSplit(this.controller.playerHands.length, this.game.score))\n            this.buttonDisplay(this.insuranceButton, this.hand.checkInsurance(this.game.dealerCards, this.game.score))\n            this.buttonDisplay(this.doubleDownButton, this.hand.checkDoubleDown(this.game.score))\n            this.buttonDisplay(this.surrenderButton, this.hand.checkSurrender(this.game.score))\n        }\n    }\n\n    buttonDisplay (button: HTMLInputElement, show: boolean) {\n        if (show)\n            button.style.display = \"inline\"\n\n        else\n            button.style.display = \"none\"\n\n\n    }\n\n    private updateScore () {\n        if (this.isPlayer)\n            this.scoreSpan.innerText = `Hand Score: ${this.hand.getScoreText()}`\n        else\n            this.scoreSpan.innerText = `Dealer Score: ${this.hand.getScoreText()}`\n\n        //this.scoreDiv.style.backgroundColor = \"rgba(0, 250, 250, 0.5);\"\n    }\n\n    public updateHand () {\n        this.updateScore()\n        let startText = \"\"\n        if (this.isPlayer)\n            startText = \"Hand\"\n\n        else\n            startText = \"Dealer\"\n        if (this.hand.checkBlackjack()) {\n            this.hand.stayed = true\n            this.scoreSpan.innerText = `${startText} Score: Blackjack`\n        }\n\n        else if (this.hand.check21()) {\n            this.hand.stayed = true\n            this.scoreSpan.innerText = `${startText} Score: 21`\n        }\n        else if (this.hand.checkBust()) {\n            this.hand.stayed = true\n            this.scoreSpan.innerText = `${startText} Score: Bust (${this.hand.getScoreText()})`\n            console.log(`Bust Score: ${this.hand.getScoreText()}`)\n        }\n\n        this.showAvailableButtons()\n\n        if (this.game.checkEndoPlayerTurn() && this.isPlayer) {\n            this.controller.dealerTurn()\n        }\n\n    }\n\n\n    hit (card?: Card) {\n\n        if (card == undefined) {\n            html.addImageToDiv(this.imageDiv, this.game.hit(this.hand))\n        }\n        else {\n            html.addImageToDiv(this.imageDiv, this.game.hit(this.hand, card))\n        }\n        this.updateHand()\n    }\n\n\n    initialHit (card?: Card) {\n        if (card == undefined) {\n            html.addImageToDiv(this.imageDiv, this.game.hit(this.hand))\n        }\n        else {\n            html.addImageToDiv(this.imageDiv, this.game.hit(this.hand, card))\n        }\n    }\n\n    stay () {\n        this.hand.stayed = true\n        this.updateHand()\n    }\n\n    split () {\n        this.game.splitPlayerHand(this.index)\n        let newIndex = this.controller.playerHands.length\n        let newHtmlHand = new HtmlHand(newIndex, this.controller, html.playerDiv, true)\n\n        html.redrawImageDiv(this.imageDiv, this)\n        html.redrawImageDiv(newHtmlHand.imageDiv, newHtmlHand)\n        this.controller.playerHands.push(newHtmlHand)\n\n        for (let hand of this.controller.playerHands) {\n            hand.updateHand()\n        }\n        this.controller.updateCurrentScore()\n    }\n\n    insurance () {\n        this.game.insureHand(this.index)\n\n        this.insuranceSpan.innerText = `Insurance: ${this.hand.insurance}`\n        this.controller.updateCurrentScore()\n        this.updateHand()\n    }\n\n    doubleDown () {\n        this.game.doubleDown(this.index)\n        this.betAmount.innerText = this.hand.bet.toString()\n        html.redrawImageDiv(this.imageDiv, this)\n        this.updateHand()\n    }\n\n    surrender () {\n        this.game.surrender(this.index)\n        this.updateHand()\n    }\n\n    clear () {\n        html.removeDataFromDiv(this.mainDiv)\n    }\n\n\n}\n","import {Card}     from \"../Models/card\"\nimport {HtmlHand} from \"TypeScript/Controller/HtmlHand\"\n\nexport let betDiv = document.getElementById(\"betDiv\")\nexport let betSpan = document.getElementById(\"betSpan\")\nexport let betTextfield = <HTMLInputElement>document.getElementById(\"betTextfield\")\n\nexport let dealerDiv = document.getElementById(\"dealerHandDiv\")\nexport let playerDiv = document.getElementById(\"playerHandDiv\")\n\nexport let buttonsDiv = document.getElementById(\"buttonsDiv\")\nexport let testDiv = document.getElementById(\"testDiv\")\n\nexport let scoreSpan = document.getElementById(\"scoreSpan\")\nexport let scoreAmount = document.getElementById(\"scoreAmount\")\nexport let startGameButton = <HTMLInputElement>document.getElementById(\"startGameButton\")\n\nexport function addImageToDiv (div: HTMLElement, card: Card) {\n    var imageTag = document.createElement(\"img\")\n    imageTag.setAttribute(\"src\", card.imageSrc)\n    imageTag.setAttribute(\"height\", \"100\")\n    imageTag.setAttribute(\"width\", \"100\")\n    imageTag.setAttribute(\"alt\", \"Error: Card Not Found\")\n    imageTag.style.marginRight = \"10px\"\n    div.appendChild(imageTag)\n}\n\nexport function redrawImageDiv (div: HTMLElement, hand: HtmlHand) {\n    removeDataFromDiv(div)\n    for (let card of hand.hand.cards) {\n        addImageToDiv(div, card)\n    }\n}\n\nexport function createButton (name: string): HTMLInputElement {\n    var button = document.createElement(\"input\")\n    button.setAttribute(\"type\", \"button\")\n    button.setAttribute(\"width\", \"100px\")\n    button.setAttribute(\"height\", \"25px\")\n    button.setAttribute(\"value\", name)\n    return button\n}\n\nexport function removeDataFromDiv (div: HTMLElement) {\n    while (div.hasChildNodes())\n        div.removeChild(div.firstChild)\n}\n\n","import {Controller} from \"TypeScript/Controller/Controller\"\r\n\r\n/*\r\nCards are loaded in reverse order\r\nThe format of the added cards is the following:\r\n\r\nDealer final cards\r\n\r\nplayer cards\r\n\r\ndealer first card\r\n */\r\n\r\nexport function testInsurance (this: Controller) {\r\n\r\n    //     this.game.deck.addCard(\"Ace\", \"Clubs\")\r\n    //     this.game.deck.addCard(\"Queen\", \"Hearts\")\r\n    this.game.deck.addCard(\"Ace\", \"Hearts\")\r\n\r\n    this.game.deck.addCard(\"King\", \"Spades\")\r\n    this.game.deck.addCard(\"King\", \"Spades\")\r\n    this.game.deck.addCard(\"King\", \"Spades\")\r\n    this.game.deck.addCard(\"King\", \"Spades\")\r\n    this.game.deck.addCard(\"9\", \"Spades\")\r\n    this.game.deck.addCard(\"Ace\", \"Spades\")\r\n    this.game.deck.addCard(\"Ace\", \"Diamonds\")\r\n    this.game.deck.addCard(\"Ace\", \"Hearts\")\r\n    this.game.deck.addCard(\"Ace\", \"Hearts\")\r\n    this.game.deck.addCard(\"Ace\", \"Clubs\")\r\n    this.game.deck.addCard(\"Ace\", \"Diamonds\")\r\n\r\n}\r\n\r\nexport function testDoubleDown (this: Controller) {\r\n    this.game.deck.addCard(\"6\", \"Hearts\")\r\n    this.game.deck.addCard(\"5\", \"Hearts\")\r\n    this.game.deck.addCard(\"8\", \"Hearts\")\r\n}\r\n\r\nexport function testAceBust (this: Controller) {\r\n    this.game.deck.addCard(\"Ace\", \"Hearts\")\r\n    this.game.deck.addCard(\"King\", \"Hearts\")\r\n\r\n    this.game.deck.addCard(\"Ace\", \"Clubs\")\r\n    this.game.deck.addCard(\"8\", \"Diamonds\")\r\n}\r\n\r\nexport function testMaxSplits (this: Controller) {\r\n    this.game.deck.addCard(\"King\", \"Spades\")\r\n    this.game.deck.addCard(\"King\", \"Spades\")\r\n    this.game.deck.addCard(\"King\", \"Spades\")\r\n    this.game.deck.addCard(\"King\", \"Spades\")\r\n    this.game.deck.addCard(\"9\", \"Spades\")\r\n    this.game.deck.addCard(\"Ace\", \"Spades\")\r\n    this.game.deck.addCard(\"Ace\", \"Diamonds\")\r\n    this.game.deck.addCard(\"Ace\", \"Hearts\")\r\n    this.game.deck.addCard(\"Ace\", \"Hearts\")\r\n    this.game.deck.addCard(\"Ace\", \"Clubs\")\r\n    this.game.deck.addCard(\"8\", \"Diamonds\")\r\n}\r\n\r\nexport function test21 (this: Controller) {\r\n    this.game.deck.addCard(\"4\", \"Spades\")\r\n    this.game.deck.addCard(\"5\", \"Diamonds\")\r\n    this.game.deck.addCard(\"10\", \"Hearts\")\r\n    this.game.deck.addCard(\"Ace\", \"Hearts\")\r\n    this.game.deck.addCard(\"Ace\", \"Clubs\")\r\n    this.game.deck.addCard(\"8\", \"Diamonds\")\r\n}\r\n","import {Controller} from \"TypeScript/Controller/Controller\"\r\n\r\n\r\n/*\r\nCards are loaded in reverse order\r\nThe format of the added cards is the following:\r\n\r\nDealer final cards\r\n\r\nplayer cards\r\n\r\ndealer first card\r\n */\r\n\r\n\r\nexport function playerWinsByBlackjack (this: Controller) {\r\n    this.game.deck.addCard(\"Jack\", \"Diamonds\")\r\n    this.game.deck.addCard(\"10\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"Queen\", \"Diamonds\")\r\n    this.game.deck.addCard(\"King\", \"Diamonds\")\r\n    this.game.deck.addCard(\"Ace\", \"Diamonds\")\r\n    this.game.deck.addCard(\"Ace\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"5\", \"Diamonds\")\r\n}\r\n\r\nexport function playerWinsByBlackjackAnd21 (this: Controller) {\r\n    this.game.deck.addCard(\"Jack\", \"Diamonds\")\r\n    this.game.deck.addCard(\"10\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"5\", \"Diamonds\")\r\n    this.game.deck.addCard(\"5\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"King\", \"Diamonds\")\r\n    this.game.deck.addCard(\"Ace\", \"Diamonds\")\r\n    this.game.deck.addCard(\"Ace\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"5\", \"Diamonds\")\r\n}\r\n\r\nexport function playerWinsByBust (this: Controller) {\r\n    this.game.deck.addCard(\"9\", \"Diamonds\")\r\n    this.game.deck.addCard(\"8\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"6\", \"Diamonds\")\r\n    this.game.deck.addCard(\"5\", \"Diamonds\")\r\n    this.game.deck.addCard(\"4\", \"Diamonds\")\r\n    this.game.deck.addCard(\"3\", \"Diamonds\")\r\n    this.game.deck.addCard(\"2\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"7\", \"Diamonds\")\r\n}\r\n\r\nexport function playerWinsByScore (this: Controller) {\r\n    this.game.deck.addCard(\"4\", \"Diamonds\")\r\n    this.game.deck.addCard(\"8\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"6\", \"Diamonds\")\r\n    this.game.deck.addCard(\"5\", \"Diamonds\")\r\n    this.game.deck.addCard(\"4\", \"Diamonds\")\r\n    this.game.deck.addCard(\"3\", \"Diamonds\")\r\n    this.game.deck.addCard(\"2\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"7\", \"Diamonds\")\r\n\r\n}\r\n\r\nexport function playerWinsByDoubleDown (this: Controller) {\r\n\r\n    this.game.deck.addCard(\"Queen\", \"Diamonds\")\r\n    this.game.deck.addCard(\"Jack\", \"Diamonds\")\r\n    this.game.deck.addCard(\"6\", \"Diamonds\")\r\n    this.game.deck.addCard(\"4\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"7\", \"Diamonds\")\r\n}\r\n\r\nexport function dealerWinsByBlackjack (this: Controller) {\r\n    this.game.deck.addCard(\"King\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"5\", \"Diamonds\")\r\n    this.game.deck.addCard(\"6\", \"Diamonds\")\r\n    this.game.deck.addCard(\"10\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"Ace\", \"Diamonds\")\r\n}\r\n\r\nexport function everyoneHasBlackjack (this: Controller) {\r\n    this.game.deck.addCard(\"King\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"10\", \"Diamonds\")\r\n    this.game.deck.addCard(\"Ace\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"Ace\", \"Diamonds\")\r\n}\r\n\r\nexport function dealerWinsByBust (this: Controller) {\r\n\r\n    this.game.deck.addCard(\"2\", \"Diamonds\")\r\n    this.game.deck.addCard(\"7\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"9\", \"Diamonds\")\r\n    this.game.deck.addCard(\"7\", \"Diamonds\")\r\n    this.game.deck.addCard(\"5\", \"Diamonds\")\r\n    this.game.deck.addCard(\"6\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"8\", \"Diamonds\")\r\n}\r\n\r\nexport function dealerWinsByScore (this: Controller) {\r\n    // split player hand into 4 hands, 1 21, 1 win, 1 bust, 1 lose\r\n    this.game.deck.addCard(\"4\", \"Diamonds\")\r\n    this.game.deck.addCard(\"8\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"7\", \"Diamonds\") //3 (Hit)\r\n    this.game.deck.addCard(\"3\", \"Diamonds\") //1 (Hit)\r\n    this.game.deck.addCard(\"5\", \"Diamonds\") //4\r\n    this.game.deck.addCard(\"8\", \"Diamonds\") //1\r\n\r\n    this.game.deck.addCard(\"King\", \"Diamonds\")  //3\r\n    this.game.deck.addCard(\"Queen\", \"Diamonds\") //1=>4\r\n    this.game.deck.addCard(\"Queen\", \"Diamonds\") //2\r\n    this.game.deck.addCard(\"Jack\", \"Diamonds\")  //1=>3\r\n    this.game.deck.addCard(\"10\", \"Diamonds\")    // 1=>2\r\n    this.game.deck.addCard(\"10\", \"Diamonds\")    // 1\r\n\r\n    this.game.deck.addCard(\"7\", \"Diamonds\")\r\n}\r\n\r\nexport function dealerWinsByDoubleDown (this: Controller) {\r\n\r\n    this.game.deck.addCard(\"Queen\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"2\", \"Diamonds\")\r\n    this.game.deck.addCard(\"6\", \"Diamonds\")\r\n    this.game.deck.addCard(\"4\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"7\", \"Diamonds\")\r\n}\r\n\r\n\r\nexport function draw (this: Controller) {\r\n\r\n    this.game.deck.addCard(\"4\", \"Diamonds\")\r\n    this.game.deck.addCard(\"7\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"6\", \"Diamonds\")\r\n    this.game.deck.addCard(\"4\", \"Diamonds\")\r\n    this.game.deck.addCard(\"8\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"7\", \"Diamonds\")\r\n}\r\n\r\nexport function draw21 (this: Controller) {\r\n    this.game.deck.addCard(\"6\", \"Diamonds\")\r\n    this.game.deck.addCard(\"5\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"3\", \"Diamonds\")\r\n    this.game.deck.addCard(\"6\", \"Diamonds\")\r\n    this.game.deck.addCard(\"4\", \"Diamonds\")\r\n    this.game.deck.addCard(\"8\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"10\", \"Diamonds\")\r\n}\r\n\r\nexport function everyoneBusts (this: Controller) {\r\n    this.game.deck.addCard(\"9\", \"Diamonds\")\r\n    this.game.deck.addCard(\"6\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"5\", \"Diamonds\")\r\n    this.game.deck.addCard(\"6\", \"Diamonds\")\r\n    this.game.deck.addCard(\"4\", \"Diamonds\")\r\n    this.game.deck.addCard(\"8\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"10\", \"Diamonds\")\r\n}\r\n\r\nexport function unknownFailure (this: Controller) {\r\n\r\n    this.game.deck.addCard(\"10\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"4\", \"Spades\")\r\n    this.game.deck.addCard(\"4\", \"Hearts\")\r\n    this.game.deck.addCard(\"10\", \"Diamonds\")\r\n\r\n    this.game.deck.addCard(\"Ace\", \"Spades\")\r\n}","import {Game}           from \"../Models/Game\"\nimport * as html        from \"./HTMLElements\"\nimport {HtmlHand}       from \"./HtmlHand\"\nimport {Card}           from \"../Models/Card\"\nimport * as testButtons from \"../Test/TestButtons\"\nimport * as testWins    from \"../Test/TestWins\"\nimport {Deck}           from \"../Models/Deck\"\n\nexport class Controller {\n    game: Game\n    debug = false\n    dealerHand: HtmlHand\n    playerHands: HtmlHand[]\n    currentScore = 1000\n    minimumBet = 20\n    private test: Function\n\n    constructor () {\n        html.startGameButton.addEventListener(\"click\", (event) => this.startNewGame())\n        html.betTextfield.addEventListener(\"keyup\", (event) => this.betTextFieldListener())\n        html.scoreAmount.innerText = this.currentScore.toString()\n    }\n\n\n    startNewGame () {\n        this.game = new Game(this.currentScore, Math.floor(parseInt(html.betTextfield.value)))\n        this.resetGameHtmlData()\n        this.updateCurrentScore()\n\n        if (this.debug) {\n            //html.testDiv.innerText = this.game.deck.toString()\n            //this.showDeck()\n        }\n\n        html.startGameButton.style.display = \"none\"\n        this.betDisplay(false)\n        this.initialHits()\n    }\n\n    initialHits () {\n        if (this.debug) {\n            //this.test = testButtons.testMaxSplits\n            this.test = testWins.dealerWinsByScore\n            this.test()\n        }\n\n        this.dealerHand.hit()\n        this.playerHands[0].initialHit()\n        this.playerHands[0].hit()\n\n    }\n\n\n    resetGameHtmlData () {\n        html.removeDataFromDiv(html.dealerDiv)\n        html.removeDataFromDiv(html.playerDiv)\n        this.betDisplay(false)\n\n\n        this.dealerHand = new HtmlHand(0, this, html.dealerDiv, false)\n        this.playerHands = []\n        this.playerHands.push(new HtmlHand(0, this, html.playerDiv, true))\n\n    }\n\n    updateCurrentScore () {\n        html.scoreAmount.innerText = this.game.score.toString()\n    }\n\n    betDisplay (display: boolean) {\n        if (display) {\n            html.betSpan.style.display = \"inline\"\n            html.betTextfield.style.display = \"inline\"\n        }\n        else {\n            html.betSpan.style.display = \"none\"\n            html.betTextfield.style.display = \"none\"\n        }\n    }\n\n    betTextFieldListener () {\n        let textField = html.betTextfield\n        let number = parseInt(textField.value)\n\n        if (this.checkValidBet()) {\n            html.startGameButton.disabled = false\n        }\n        else\n            html.startGameButton.disabled = true\n    }\n\n    checkValidBet (): boolean {\n        let number = parseInt(html.betTextfield.value)\n\n        let isANumber = isNaN(number) === false\n        let minCheck = number >= this.minimumBet\n        let maxCheck = number <= this.currentScore\n        return isANumber && minCheck && maxCheck\n\n    }\n\n    dealerTurn () {\n        this.game.dealerTurn()\n        html.redrawImageDiv(this.dealerHand.imageDiv, this.dealerHand)\n        this.dealerHand.updateHand()\n        this.endGame()\n    }\n\n    endGame () {\n        let totalWinnings = 0;\n        for (let hand of this.playerHands) {\n            let winnings = hand.hand.winnings - hand.hand.bet\n\n\n            let winningsText = \"\"\n            if (winnings > 0)\n                winningsText = `You gained: ${Math.abs(winnings)}`\n            else if (winnings < 0) {\n                if (hand.hand.insurance > 0 && this.dealerHand.hand.checkBlackjack()) {\n                    winningsText = `You lost: ${Math.abs(hand.hand.bet)}, but gained it back because of insurance.`\n                    this.game.score += hand.hand.insurance * 3\n                }\n                else\n                    winningsText = `You lost: ${Math.abs(winnings)}`\n            }\n\n            else {\n                winningsText = `You gained: ${Math.abs(winnings)}`\n            }\n\n            totalWinnings += winnings\n            hand.winningsSpan.innerText = hand.hand.winningText\n            hand.winningsAmount.innerText = winningsText\n        }\n        this.currentScore = this.game.score\n        this.updateCurrentScore()\n        html.startGameButton.style.display = \"inline\"\n        this.betDisplay(true)\n        this.betTextFieldListener()\n        if (this.currentScore < this.minimumBet) {\n            html.startGameButton.style.display = \"none\"\n            let span = document.createElement(\"span\")\n            span.innerText = \"You don't have enough to continue. Game Over :(\"\n            span.style.backgroundColor = \"rgba(255, 255, 255, 0.5)\"\n            span.style.fontSize = \"xx-large\"\n            html.testDiv.appendChild(span)\n        }\n    }\n\n    showDeck () {\n        let deck = new Deck(1)\n\n        while (deck.isEmpty() === false) {\n            html.addImageToDiv(html.testDiv, deck.cards.pop())\n        }\n\n    }\n\n\n}\n","import {Controller} from \"./Controller/Controller\"\nimport * as html    from \"./Controller/HTMLElements\"\n\nlet controller = new Controller()\n\n","import {Game}       from \"../Models/Game\"\r\nimport {Controller} from \"./Controller\"\r\nimport * as html    from \"./HTMLElements\"\r\n/*\r\nexport let DealerTurn = function(controller: Controller) {\r\n  let lowChanceToLose = Math.floor(controller.game.dealerCards.getLowestScore()) < 17\r\n  let dealerScore = controller.game.dealerCards.getHighestScore()\r\n\r\n  while (lowChanceToLose) {\r\n    controller.html.addImageToDiv(controller.html.dealerDiv, controller.game.dealerHit())\r\n    dealerScore = controller.game.dealerCards.getHighestScore()\r\n  }\r\n\r\n  controller.updateScores()\r\n  controller.checkForEndOfGame()\r\n}\r\n\r\n*/\r\n\r\n/*\r\nlet DealerTurn = function(this: Controller) {\r\n  let mustHitToWin = game.playerStayed && game.playerCards.getHighestScore > game.dealerCards.getHighestScore\r\n  let lowChanceToLose = Math.floor(game.dealerCards.getHighestScore()) < 17\r\n  let dealerScore = game.dealerCards.getHighestScore()\r\n  let playerScore = game.playerCards.getHighestScore()\r\n\r\n  if (game.DealerStayed == false) {\r\n    if (game.playerStayed === true && playerScore > dealerScore) {\r\n      while (dealerScore < playerScore) {\r\n        addImageToDiv(dealerDiv, game.DealerHit())\r\n        dealerScore = game.dealerCards.getHighestScore()\r\n      }\r\n    }\r\n\r\n    else if (mustHitToWin || lowChanceToLose) {\r\n      addImageToDiv(dealerDiv, game.DealerHit())\r\n    }\r\n    else { game.DealerStay() }\r\n\r\n  }\r\n  updateScores()\r\n  checkForEndOfGame()\r\n}*/\r\n"]}