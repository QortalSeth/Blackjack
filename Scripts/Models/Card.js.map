{"version":3,"file":"Card.js","sourceRoot":"","sources":["../../TypeScript/Models/Card.ts"],"names":[],"mappings":";;;IAAA,wGAAwG;IACxG;;;;;;;;;;;;;;;;MAgBE;IACW,QAAA,cAAc,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IAChG,QAAA,SAAS,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAA;IAElE,MAAM,YAAY,GAAG,IAAI,GAAG,EAAkB;SAC3C,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC;SACb,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC;SACf,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC;SAChB,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC;SACf,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;IAEhB,MAAa,IAAI;QAMf,YAAmB,IAAY,EAAS,IAAY;YAAjC,SAAI,GAAJ,IAAI,CAAQ;YAAS,SAAI,GAAJ,IAAI,CAAQ;YAClD,IAAI,CAAC,QAAQ,GAAG,UAAU,IAAI,CAAC,WAAW,EAAE,OAAO,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC;YAC5E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAC5B,CAAC;QAED,QAAQ;YACN,OAAO,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACpC,CAAC;QAGD,QAAQ;YACN,OAAO,GAAG,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;QACxC,CAAC;KACF;IAnBD,oBAmBC","sourcesContent":["// export enum cardSuit { Clubs = 'Clubs', Diamonds = 'Diamonds', Hearts = 'Hearts', Spades = 'Spades' }\n/*\nexport enum cardType {\n  Two = '2',\n  Three = '3',\n  Four = '4',\n  Five = '5',\n  Six = '6',\n  Seven = '7',\n  Eight = '8',\n  Nine = '9',\n  Ten = '10',\n  Jack = 'Jack',\n  Queen = 'Queen',\n  King = 'King',\n  Ace = 'Ace'\n}\n*/\nexport const cardTypesArray = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King', 'Ace'];\nexport const cardSuits = ['Clubs', 'Diamonds', 'Hearts', 'Spades']\n\nconst cardTypesMap = new Map<string, number>()\n  .set('2', 2)\n  .set('3', 3)\n  .set('4', 4)\n  .set('5', 5)\n  .set('6', 6)\n  .set('7', 7)\n  .set('8', 8)\n  .set('9', 9)\n  .set('10', 10)\n  .set('Jack', 10)\n  .set('Queen', 10)\n  .set('King', 10)\n  .set('Ace', 1)\n\nexport class Card {\n\n\n\n  imageSrc: string;\n\n  constructor(public type: string, public suit: string) {\n    this.imageSrc = `Images/${type.toLowerCase()}_of_${suit.toLowerCase()}.png`;\n    console.log(this.imageSrc)\n  }\n\n  getScore(): number {\n    return cardTypesMap.get(this.type)\n  }\n\n\n  toString(): string {\n    return `${this.type} of ${this.suit}`;\n  }\n}\n"]}