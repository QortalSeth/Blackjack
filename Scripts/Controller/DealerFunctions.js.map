{"version":3,"file":"DealerFunctions.js","sourceRoot":"","sources":["../../TypeScript/Controller/DealerFunctions.ts"],"names":[],"mappings":";;;;AAGA;;;;;;;;;;;;;;EAcE;AAEF;;;;;;;;;;;;;;;;;;;;;;;GAuBG","sourcesContent":["import {Game}       from \"../Models/Game\"\r\nimport {Controller} from \"./Controller\"\r\nimport * as html    from \"./HTMLElements\"\r\n/*\r\nexport let DealerTurn = function(controller: Controller) {\r\n  let lowChanceToLose = Math.floor(controller.game.dealerCards.getLowestScore()) < 17\r\n  let dealerScore = controller.game.dealerCards.getHighestScore()\r\n\r\n  while (lowChanceToLose) {\r\n    controller.html.addImageToDiv(controller.html.dealerDiv, controller.game.dealerHit())\r\n    dealerScore = controller.game.dealerCards.getHighestScore()\r\n  }\r\n\r\n  controller.updateScores()\r\n  controller.checkForEndOfGame()\r\n}\r\n\r\n*/\r\n\r\n/*\r\nlet DealerTurn = function(this: Controller) {\r\n  let mustHitToWin = game.playerStayed && game.playerCards.getHighestScore > game.dealerCards.getHighestScore\r\n  let lowChanceToLose = Math.floor(game.dealerCards.getHighestScore()) < 17\r\n  let dealerScore = game.dealerCards.getHighestScore()\r\n  let playerScore = game.playerCards.getHighestScore()\r\n\r\n  if (game.DealerStayed == false) {\r\n    if (game.playerStayed === true && playerScore > dealerScore) {\r\n      while (dealerScore < playerScore) {\r\n        addImageToDiv(dealerDiv, game.DealerHit())\r\n        dealerScore = game.dealerCards.getHighestScore()\r\n      }\r\n    }\r\n\r\n    else if (mustHitToWin || lowChanceToLose) {\r\n      addImageToDiv(dealerDiv, game.DealerHit())\r\n    }\r\n    else { game.DealerStay() }\r\n\r\n  }\r\n  updateScores()\r\n  checkForEndOfGame()\r\n}*/\r\n"]}