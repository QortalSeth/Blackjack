{"version":3,"file":"HtmlHand.js","sourceRoot":"","sources":["../../TypeScript/Controller/HtmlHand.ts"],"names":[],"mappings":"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","sourcesContent":["import {Game}       from \"../Models/Game\"\nimport {Hand}       from \"../Models/Hand\"\nimport {Controller} from \"./Controller\"\nimport * as html    from \"./HTMLElements\"\nimport {Card}       from \"TypeScript/Models/Card\"\n\nexport class HtmlHand {\n    mainDiv: HTMLElement\n    imageDiv: HTMLElement\n    scoreDiv: HTMLElement\n    buttonDiv: HTMLElement\n\n    winnerText: string\n\n    hitButton: HTMLInputElement\n    stayButton: HTMLInputElement\n    splitButton: HTMLInputElement\n    insuranceButton: HTMLInputElement\n    doubleDownButton: HTMLInputElement\n    surrenderButton: HTMLInputElement\n\n    hand: Hand\n\n\n    constructor (public index: number, public game: Game, public parent: HTMLElement, public isPlayer: boolean) {\n        this.mainDiv = document.createElement(\"div\")\n        this.imageDiv = document.createElement(\"div\")\n        this.scoreDiv = document.createElement(\"div\")\n        this.buttonDiv = document.createElement(\"div\")\n\n        this.mainDiv.appendChild(this.imageDiv)\n        this.mainDiv.appendChild(this.scoreDiv)\n        this.mainDiv.appendChild(this.buttonDiv)\n\n        this.winnerText = \"\"\n\n        if (isPlayer) {\n            this.hand = game.playerCards[index]\n            this.createButtons()\n        }\n        else\n            this.hand = game.dealerCards\n\n        parent.appendChild(this.mainDiv)\n    }\n\n\n    createButtons () {\n\n        // create button objects\n        this.hitButton = html.createButton(\"Hit\")\n        this.stayButton = html.createButton(\"Stay\")\n        this.splitButton = html.createButton(\"Split\")\n        this.insuranceButton = html.createButton(\"Insurance\")\n        this.doubleDownButton = html.createButton(\"Double Down\")\n        this.surrenderButton = html.createButton(\"Surrender\")\n\n        //append buttons to buttonDiv\n        this.buttonDiv.appendChild(this.hitButton)\n        this.buttonDiv.appendChild(this.stayButton)\n        this.buttonDiv.appendChild(this.splitButton)\n        this.buttonDiv.appendChild(this.insuranceButton)\n        this.buttonDiv.appendChild(this.doubleDownButton)\n        this.buttonDiv.appendChild(this.surrenderButton)\n\n        //add button listeners\n        this.hitButton.addEventListener(\"click\", (event) => this.hit())\n        this.stayButton.addEventListener(\"click\", (event) => this.stay())\n        this.splitButton.addEventListener(\"click\", (event) => this.split())\n        this.insuranceButton.addEventListener(\"click\", (event) => this.insurance())\n        this.doubleDownButton.addEventListener(\"click\", (event) => this.doubleDown())\n        this.surrenderButton.addEventListener(\"click\", (event) => this.surrender())\n\n    }\n\n\n    showAvailableButtons () {\n        if (this.isPlayer) {\n            this.buttonDisplay(this.hitButton, this.hand.checkHit())\n            this.buttonDisplay(this.stayButton, this.hand.checkStay())\n            this.buttonDisplay(this.splitButton, this.hand.checkSplit())\n            this.buttonDisplay(this.insuranceButton, this.game.dealerCards.checkInsurance())\n            this.buttonDisplay(this.doubleDownButton, this.hand.checkDoubleDown())\n            this.buttonDisplay(this.surrenderButton, this.hand.checkSurrender())\n        }\n    }\n\n    buttonDisplay (button: HTMLInputElement, show: boolean) {\n        if (show)\n            button.style.display = \"inline\"\n        else\n            button.style.display = \"none\"\n    }\n\n    private updateScore () {\n        if (this.isPlayer)\n            this.scoreDiv.innerText = `Hand Score: ${this.hand.getScoreText()}`\n        else\n            this.scoreDiv.innerText = `Dealer Score: ${this.hand.getScoreText()}`\n    }\n\n    public updateHand () {\n        this.showAvailableButtons()\n        this.updateScore()\n    }\n\n    checkEndofTurn () {\n\n    }\n\n\n    hit (card?: Card) {\n\n        if (card == undefined) {\n            html.addImageToDiv(this.imageDiv, this.game.hit(this.hand))\n        }\n        else {\n            html.addImageToDiv(this.imageDiv, this.game.hit(this.hand, card))\n        }\n        this.updateHand()\n        if (this.hand.checkBlackjack()) {\n            this.stay()\n            this.scoreDiv.innerText = `Hand Score: Blackjack`\n        }\n\n        else if (this.hand.checkBust()) {\n            this.stay();\n            this.scoreDiv.innerText = `Hand Score: Bust`\n        }\n\n\n    }\n\n    initialHit (card?: Card) {\n        if (card == undefined) {\n            html.addImageToDiv(this.imageDiv, this.game.hit(this.hand))\n        }\n        else {\n            html.addImageToDiv(this.imageDiv, this.game.hit(this.hand, card))\n        }\n    }\n\n    stay () {\n        this.hand.stayed = true\n        this.updateHand()\n    }\n\n    split () {\n    }\n\n    insurance () {\n    }\n\n    doubleDown () {\n    }\n\n    surrender () {\n    }\n\n\n    /*\n    checkForEndOfGame() {\n\n      this.game.checkWinner()\n      if (this.game.gameOver) {\n\n        // display winning text reset buttons\n        this.html.winnerText.innerText = this.game.winningText\n        if (this.game.winnerIsPlayer)\n          this.html.winnerText.style.color = 'blue'\n\n        else\n          this.html.winnerText.style.color = 'red'\n\n        this.html.startGameButton.style.display = 'inline'\n        this.html.hitButton.style.display = 'none'\n        this.html.stayButton.style.display = 'none'\n      }\n\n\n\n    }\n  */\n\n\n}\n"]}