{"version":3,"file":"Controller.js","sourceRoot":"","sources":["../../TypeScript/Controller/Controller.ts"],"names":[],"mappings":"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","sourcesContent":["import {Game}     from \"../Models/Game\"\nimport * as html  from \"./HTMLElements\"\nimport {HtmlHand} from \"./HtmlHand\"\nimport {Card}     from \"../Models/Card\"\n\nexport class Controller {\n    game: Game\n    debug = false\n    dealerHand: HtmlHand\n    playerHand: HtmlHand[]\n    startMoney = 10000\n\n    constructor (public currentScore) {\n        html.startGameButton.addEventListener(\"click\", (event) => this.startNewGame())\n        html.betTextfield.addEventListener(\"keyup\", (event) => this.betTextFieldListener())\n        html.scoreAmount.innerText = this.startMoney.toString()\n    }\n\n\n    startNewGame () {\n        this.game = new Game(this.currentScore, Math.floor(parseInt(html.betTextfield.value)))\n        this.resetGameHtmlData()\n        this.updateCurrentScore()\n\n        if (this.debug)\n            html.testDiv.innerText = this.game.deck.toString()\n\n        this.initialHits(true)\n        html.startGameButton.style.display = \"none\"\n        html.betSpan.style.display = \"none\"\n        html.betTextfield.style.display = \"none\"\n\n\n    }\n\n    initialHits (debug: boolean) {\n        if (debug) {\n            this.dealerHand.hit(new Card(\"8\", \"Diamonds\"))\n            this.playerHand[0].initialHit(new Card(\"Ace\", \"Hearts\"))\n            this.playerHand[0].hit(new Card(\"Ace\", \"Clubs\"))\n        }\n\n        else {\n            this.dealerHand.hit()\n            this.playerHand[0].initialHit()\n            this.playerHand[0].hit()\n        }\n    }\n\n\n    resetGameHtmlData () {\n        html.removeDataFromDiv(html.dealerDiv)\n        html.removeDataFromDiv(html.playerDiv)\n        this.betDisplay(false)\n        this.dealerHand = new HtmlHand(0, this, html.dealerDiv, false)\n        this.playerHand = []\n        this.playerHand.push(new HtmlHand(0, this, html.playerDiv, true))\n\n    }\n\n    updateCurrentScore () {\n        html.scoreAmount.innerText = this.game.score.toString()\n    }\n\n    betDisplay (display: boolean) {\n        if (display) {\n            html.betSpan.style.display = \"inline\"\n            html.betTextfield.style.display = \"inline\"\n        }\n        else {\n            html.betSpan.style.display = \"none\"\n            html.betTextfield.style.display = \"none\"\n        }\n    }\n\n    betTextFieldListener () {\n        let textField = html.betTextfield\n        let number = parseInt(textField.value)\n        if (isNaN(number) || number < 20) {\n            html.startGameButton.disabled = true\n        }\n        else\n            html.startGameButton.disabled = false\n    }\n}\n"]}