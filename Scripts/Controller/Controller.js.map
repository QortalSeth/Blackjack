{"version":3,"file":"Controller.js","sourceRoot":"","sources":["../../TypeScript/Controller/Controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;IAMA,MAAa,UAAU;QAOnB;YALA,UAAK,GAAG,KAAK,CAAA;YACb,eAAU,GAAG,KAAK,CAAA;YAKd,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,OAAO,EAAE,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;YACtF,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;QAC1F,CAAC;QAGD,YAAY;YACR,IAAI,CAAC,IAAI,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;YACxF,IAAI,CAAC,aAAa,EAAE,CAAA;YAGpB,IAAI,IAAI,CAAC,KAAK;gBACV,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAA;YACtD,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;YACxB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;YACxB,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAA;YACrB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAA;YAC3C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAA;YACnC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAA;QAG5C,CAAC;QAED;;;;;UAKE;QAGF,aAAa;YACT,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YACtC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YACtC,eAAe,CAAC,mBAAmB,CAAA;YACnC,IAAI,CAAC,UAAU,GAAG,IAAI,mBAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAA;YACnE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAA;YACpB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,mBAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAA;QAE1E,CAAC;QAGD,UAAU,CAAE,OAAgB;YACxB,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAA;gBACrC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAA;aAC7C;iBACI;gBACD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAA;gBACnC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAA;aAC3C;QACL,CAAC;KAGJ;IA7DD,gCA6DC","sourcesContent":["import {Game}               from \"../Models/Game\"\nimport * as html            from \"./HTMLElements\"\nimport * as playerFunctions from \"./PlayerFunctions\"\nimport {HtmlHand}           from \"./HtmlHand\"\nimport * as listeners       from \"./ButtonListeners\"\n\nexport class Controller {\n    game: Game\n    debug = false\n    startMoney = 10000\n    dealerHand: HtmlHand\n    playerHand: HtmlHand[]\n\n    constructor () {\n        html.startGameButton.addEventListener(\"click\", listeners.startGameListener.bind(this))\n        html.betTextfield.addEventListener(\"keyup\", listeners.betTextFieldListener.bind(this))\n    }\n\n\n    startNewGame () {\n        this.game = new Game(this.startMoney, Math.floor(parseInt(html.betTextfield.innerText)))\n        this.resetGameData()\n\n\n        if (this.debug)\n            html.testDiv.innerText = this.game.deck.toString()\n        this.playerHand[0].hit()\n        this.playerHand[0].hit()\n        this.dealerHand.hit()\n        html.startGameButton.style.display = \"none\"\n        html.betSpan.style.display = \"none\"\n        html.betTextfield.style.display = \"none\"\n\n\n    }\n\n    /*\n      playerHit(handIndex: number) {\n        html.addImageToDiv(html.playerDiv, this.game.playerHit(handIndex))\n        this.checkForEndOfGame()\n      }\n    */\n\n\n    resetGameData () {\n        html.removeDataFromDiv(html.dealerDiv)\n        html.removeDataFromDiv(html.playerDiv)\n        playerFunctions.disableBetTextField\n        this.dealerHand = new HtmlHand(0, this.game, html.dealerDiv, false)\n        this.playerHand = []\n        this.playerHand.push(new HtmlHand(0, this.game, html.playerDiv, true))\n\n    }\n\n\n    betDisplay (display: boolean) {\n        if (display) {\n            html.betSpan.style.display = \"inline\"\n            html.betTextfield.style.display = \"inline\"\n        }\n        else {\n            html.betSpan.style.display = \"none\"\n            html.betTextfield.style.display = \"none\"\n        }\n    }\n\n\n}\n"]}